<?xml version="1.0" encoding="UTF-8"?>

<configuration>
    <!-- 
              引用 阿里Java规范中的一句话：
	           大量地输出无效日志，不利于系统性能提升，也不利于快速定位错误点。
	           记录日志时请思考：这些日志真的有人看吗？看到这条日志你能做什么？能不能给问题排查带来好处？
     -->

    <!-- 服务名称 -->
    <property name="contextName" value="gs-web" />

    <property name="LOG_HOME" value="/logs/server" />
    <property name="LOG_FILE" value="${LOG_HOME}/${contextName}/%d{yyyy-MM-dd}_${HostName}_bizlog" />
    
	<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符 -->
	<!--<property name="pattern" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%contextName][${PID}][%thread] %-5level [%logger{50}] - %msg%n" /> -->
	<property name="pattern" value="%d [%thread] %-5level %logger{50} - %msg%n" />
    
    <contextName>${contextName}</contextName>

    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <appender name="infoRollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
        </filter>
		<append>false</append> 
        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${LOG_FILE}_info_%i.log</FileNamePattern>
           	<maxFileSize>30MB</maxFileSize>  
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <appender name="debugRollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>DEBUG</level>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${LOG_FILE}_debug_%i.log</FileNamePattern>
            <maxFileSize>30MB</maxFileSize>  
        </rollingPolicy>

        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>
    
    <!-- 除了filter，其他 配置和上面一样， 只是name和文件路径不同-->  
    <appender name="errorRollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">  
         <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">  
	        <!-- rollover daily -->  
	        <fileNamePattern>${LOG_FILE}_error_%i.log</fileNamePattern>  
	        <!-- each file should be at most 30MB -->  
	        <maxFileSize>30MB</maxFileSize>  
   		 </rollingPolicy>  
	    <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">  
	        <charset>UTF-8</charset>
            <pattern>${pattern}</pattern>  
	    </encoder> 
        <!-- 阈值过滤器 -->  
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">  
            <!-- 收集ERROR及ERROR以上级别的日志 -->  
            <level>ERROR</level>  
        </filter>  
    </appender>  
    
    <appender name="warnRollingFile" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <FileNamePattern>${LOG_FILE}_warn_%i.log</FileNamePattern>
            <maxFileSize>30MB</maxFileSize>  
        </rollingPolicy>
		
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>

    <root level="info">
        <appender-ref ref="console" />
        <appender-ref ref="infoRollingFile" />
        <appender-ref ref="debugRollingFile" />
        <appender-ref ref="errorRollingFile" />
        <appender-ref ref="warnRollingFile" />
    </root>

    <!-- 
        additivity的作用在于 children-logger是否使用 rootLogger配置的appender进行输出。
        false：表示只用当前logger的appender-ref。
        true：表示当前logger的appender-ref和rootLogger的appender-ref都有效。默认值为true
     -->
    <logger name="org.springframework.jdbc.core" level="debug" />
   
    <logger name="com.gs" level="DEBUG" />
</configuration>